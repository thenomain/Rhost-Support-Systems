FOR SAY() ON RHOST:

MOGRIFY
  Config parameter: hook_obj (Topic: mogrify)
   
  This requires a valid hook_obj to be set.  See wizhelp on hook_obj.
  
  Mogrifiers are special conditionals for the hook object.  They will
  only mogrify say, pose, and @emit.  If they exist, they are always
  on.  The following mogrifiers are allowable:
         M_SAY    -- this handles 'say' and the '"' shorthand.
         M_POSE   -- this handles 'pose' and the ':'/';' shorthand.
         M_@EMIT  -- this handles '@emit' and the '\\' shorthand.
  
  When these attributes exist on the hook object, the command is
  then on mogrifier.  If the mogrification returns an empty string,
  the command is not executed and is ignored.  Mogrification is done
  through function evaluation.  
  
  The following special arguments are allowable to the mogrifier.
    %0 - the 'finished' output of what say, pose, or @emit would show.
    %1 - the 'raw' output of what the target typed in.
    %2 - the dbref# of the target triggering the command.
    %3 - (Only for pose) -- boolean set to '1' if a pose/nospace (;)
    %4 - (Only for say) -- boolean set to '1' if say message is for
         the player-only ("You Say...")
  
  The only way to disable mogrification of a command is to move, or
  remove, the M_ attribute.
  
  See Also: @hook, hook_obj




Ahh. So:
a) Find the hook object
b) Look for the various m_say/m_pose/m_emit attributes
c) u() call them with the proper attributes.


think config( hook_obj )